<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/11/20/hello-world/</url>
    <content><![CDATA[<p>Hello World</p>
<span id="more"></span>
]]></content>
  </entry>
  <entry>
    <title>kubernetes</title>
    <url>/2021/11/20/kubernetes/</url>
    <content><![CDATA[<h2 id="安装kubernetes"><a href="#安装kubernetes" class="headerlink" title="安装kubernetes"></a>安装kubernetes</h2><span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">EOF | sudo tee /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">repo_gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">exclude=kubelet kubeadm kubectl</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 阿里源</span></span><br><span class="line">cat &lt;&lt;<span class="string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">repo_gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 SELinux 设置为 permissive 模式（相当于将其禁用）</span></span><br><span class="line">sudo setenforce 0</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/^SELINUX=enforcing$/SELINUX=permissive/&#x27;</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line">sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now kubelet</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装docker</span></span><br><span class="line"><span class="comment">##1. 安装工具包并设置库</span></span><br><span class="line"></span><br><span class="line">   sudo yum install -y yum-utils </span><br><span class="line">   </span><br><span class="line">   sudo yum-config-manager \</span><br><span class="line">       --add-repo \</span><br><span class="line">       https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.安装docker</span></span><br><span class="line">   sudo yum install -y docker-ce docker-ce-cli containerd.io</span><br><span class="line">   </span><br><span class="line"><span class="comment">#3.使用docker</span></span><br><span class="line">   <span class="comment"># 1 启动</span></span><br><span class="line">   sudo systemctl start docker</span><br><span class="line">   </span><br><span class="line">   <span class="comment"># 2 设置docker开机启动</span></span><br><span class="line">   sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">   </span><br><span class="line">   <span class="comment"># 3 设置国内镜像仓库</span></span><br><span class="line">   <span class="comment"># 创建文件</span></span><br><span class="line">   sudo mkdir -p /etc/docker</span><br><span class="line">   <span class="comment"># 修改配置, 设置镜像</span></span><br><span class="line"> sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://vw9qapdy.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line">  <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">   <span class="comment"># 重启后台线程</span></span><br><span class="line">   sudo systemctl daemon-reload</span><br><span class="line">   <span class="comment"># 重启docker</span></span><br><span class="line">   sudo systemctl restart docker</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"><span class="comment">#preflight issuses     安装日志 /var/log/messages</span></span><br><span class="line"><span class="comment">#issuse: FileContent–proc-sys-net-bridge-bridge-nf-call-iptables</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/bridge/bridge-nf-call-iptables</span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/bridge/bridge-nf-call-ip6tables</span><br><span class="line"></span><br><span class="line"><span class="comment">#issuse: running with swap on is not supported. Please disable swap</span></span><br><span class="line"><span class="comment">#禁用当前的 swap</span></span><br><span class="line">sudo swapoff -a </span><br><span class="line"><span class="comment">#同时永久禁掉swap分区，打开如下文件注释掉swap那一行</span></span><br><span class="line">sudo vi /etc/fstab</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#issuse:  hostname  could not be reache</span></span><br><span class="line">3、修改linux主机的配置文件/etc/sysconfig/network 和 /etc/hosts</span><br><span class="line">     1).修改/etc/sysconfig/network里面的主机名字。</span><br><span class="line">          [root@bogon ~]<span class="comment">#  vi /etc/sysconfig/network</span></span><br><span class="line"></span><br><span class="line">               NETWORKING=yes</span><br><span class="line">               HOSTNAME=slave1                // 在这修改 hostname 为 xg</span><br><span class="line">     2).修改/etc/hosts里面的名字</span><br><span class="line">          [root@bogon ~]<span class="comment">#  vi /etc/hosts</span></span><br><span class="line">               127.0.0.1              slave1</span><br><span class="line">     3).不需要重启主机,最后在终端下执行：</span><br><span class="line">          [root@bogon ~]<span class="comment"># hostname slave1     // xg 为修改的hostname</span></span><br><span class="line">          </span><br><span class="line"></span><br><span class="line"><span class="comment">#issuse: kube-controller-manager CrashLoopBackOff</span></span><br><span class="line">Error: unknown flag: --horizontal-pod-autoscaler-use-rest-clients</span><br><span class="line">修改/etc/kubernetes/manifests/kube-controller-manager.yaml 参数</span><br><span class="line"></span><br><span class="line"><span class="comment">#issuse: k8s Error registering network: failed to acquire lease: node “master“ pod cidr not assigne </span></span><br><span class="line"><span class="comment"># 部署flannel网络插件时发现flannel一直处于CrashLoopBackOff状态，查看日志提示没有分配cidr</span></span><br><span class="line">vim /etc/kubernetes/manifests/kube-controller-manager.yaml</span><br><span class="line">增加参数：</span><br><span class="line">--allocate-node-cidrs=<span class="literal">true</span></span><br><span class="line">--cluster-cidr=10.244.0.0/16</span><br><span class="line">systemctl restart kubelet</span><br><span class="line"></span><br><span class="line"><span class="comment">#kubeadm 安装</span></span><br><span class="line">kubeadm init --pod-network-cidr=10.244.0.0/16  --config  .yaml</span><br><span class="line">kubeadm init --apiserver-advertise-address=192.168.111.100 --pod-network-cidr=192.168.0.0/16 </span><br><span class="line"></span><br><span class="line"><span class="comment">#安装flannel</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure>




]]></content>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>i18N</title>
    <url>/2021/11/25/i18n/</url>
    <content><![CDATA[<p>springboot 系列——国际化</p>
<span id="more"></span>

<h2 id="springboot默认就支持国际化。我们只需要只需要作相应的配置即可。"><a href="#springboot默认就支持国际化。我们只需要只需要作相应的配置即可。" class="headerlink" title="springboot默认就支持国际化。我们只需要只需要作相应的配置即可。"></a>springboot默认就支持国际化。我们只需要只需要作相应的配置即可。</h2><ol>
<li><p>在resources下定义国际化配置文件，注意名称必须以messages开始。（在springboot中，当我们不修改配置时默认去解析名称以message开始的properties文件）</p>
</li>
<li><p>messages.properties （默认环境，无法确定语言环境时，解析该文件中的相应信息）</p>
</li>
<li><p>messages_zh_CN.properties（中文语言环境时，解析该文件中的相应信息）</p>
</li>
<li><p>messages_en_US.properties（英文语言环境时，解析该文件中的相应信息）</p>
</li>
<li><p>在三个配置文件中分别以<code>Key = Value</code>形式存储如下三条信息，如下：</p>
<p>welcome = 这是一个支持国际化的项目。</p>
<p>welcome = 这是一个支持国际化的项目。</p>
<p>welcome = This is a project supporting internationalization.</p>
</li>
<li><p>前端页面通过#{welcome}获取国际化</p>
</li>
<li><p>后端使用国际化</p>
<ol>
<li><p>在这里首先我们需要获取到当前请求的Locale，有两种方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Locale locale = LocaleContextHolder.getLocale();</span><br><span class="line"></span><br><span class="line">Locale locale = RequestContextUtils.getLocale(request);</span><br></pre></td></tr></table></figure></li>
<li><p>两种方式根据情况选择使用，下面是controller代码:</p>
<ul>
<li>```java<br>package com.example.i18n.controller;import org.springframework.beans.factory.annotation.Autowired;<br>import org.springframework.context.MessageSource;<br>import org.springframework.context.i18n.LocaleContextHolder;<br>import org.springframework.web.bind.annotation.RequestMapping;<br>import org.springframework.web.bind.annotation.RestController;/**<ul>
<li><p>描述:<br>*</p>
</li>
<li><p>@author zhengql</p>
</li>
<li><p>@date 2018/9/21 10:54<br>*/<br>@RestController<br>public class JsonController {</p>
<p>@Autowired<br>private MessageSource messageSource;</p>
<p>@RequestMapping(“/ha”)<br>public String ha() {</p>
<pre><code>return messageSource.getMessage(&quot;welcome&quot;, null, LocaleContextHolder.getLocale());
</code></pre>
<p>}<br>}</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">      </span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">3. 支持占位符国际化信息返回</span><br><span class="line"></span><br><span class="line">   messages.properties,messages_zh_CN.properties</span><br><span class="line"></span><br><span class="line">   ```java</span><br><span class="line">   hello=你好：&#123;0&#125; ， 你的验证码为 ：&#123;1&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<p>在Controlle中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">messageSource.getMessage(<span class="string">&quot;hello&quot;</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&quot;123456&quot;</span>&#125;,LocaleContextHolder.getLocale());</span><br></pre></td></tr></table></figure></li>
<li><p>支持国际化的枚举类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span>  <span class="title">EnumSuccessOrError</span> </span>&#123;</span><br><span class="line">SUCCESS(<span class="number">0</span>, <span class="string">&quot;SUCCESS&quot;</span>),</span><br><span class="line">ERROR(<span class="number">1</span>, <span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">      </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回状态码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> statusCode;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回状态信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String statusMsg;</span><br><span class="line">      </span><br><span class="line">EnumSuccessOrError(<span class="keyword">int</span> statusCode, String statusMsg) &#123;</span><br><span class="line">    <span class="keyword">this</span>.statusCode = statusCode;</span><br><span class="line">    <span class="keyword">this</span>.statusMsg = statusMsg;</span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line"><span class="keyword">private</span> MessageSource messageSource;</span><br><span class="line">      </span><br><span class="line"><span class="function"><span class="keyword">public</span> EnumSuccessOrError <span class="title">setMessageSource</span><span class="params">(MessageSource messageSource)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.messageSource = messageSource;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line"><span class="comment">//通过静态内部类的方式注入bean，并赋值到枚举中</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ReportTypeServiceInjector</span> </span>&#123;</span><br><span class="line">      </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MessageSource messageSource;</span><br><span class="line">      </span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postConstruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (EnumSuccessOrError rt : EnumSet.allOf(EnumSuccessOrError.class))</span><br><span class="line">            rt.setMessageSource(messageSource);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the statusCode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getStatusCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> statusCode;</span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the statusMsg，根据语言环境返回国际化字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getStatusMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> messageSource.getMessage(statusMsg,<span class="keyword">null</span>,statusMsg, LocaleContextHolder.getLocale());</span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ol>
]]></content>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
</search>
